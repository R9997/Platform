"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import {
  Target,
  TrendingUp,
  Users,
  Calendar,
  CheckCircle,
  AlertTriangle,
  XCircle,
  Plus,
  Eye,
  MessageSquare,
  Lightbulb,
  Clock,
  Zap,
} from "lucide-react"

interface Goal {
  id: string
  title: string
  description: string
  type: "company" | "department" | "individual" | "project"
  level: "strategic" | "tactical" | "operational"
  owner: string
  department: string
  progress: number
  status: "on-track" | "at-risk" | "behind"
  startDate: string
  endDate: string
  keyResults: KeyResult[]
  comments: Comment[]
}

interface KeyResult {
  id: string
  title: string
  target: number
  current: number
  unit: string
  progress: number
}

interface Comment {
  id: string
  author: string
  text: string
  date: string
  type: "update" | "feedback" | "approval"
}

const StrategyDashboard = () => {
  const [activeTab, setActiveTab] = useState("overview")
  const [showAddGoal, setShowAddGoal] = useState(false)
  const [showGoalDetails, setShowGoalDetails] = useState(false)
  const [selectedGoal, setSelectedGoal] = useState<Goal | null>(null)
  const [showWeeklyReport, setShowWeeklyReport] = useState(false)
  const [weeklyReport, setWeeklyReport] = useState({
    goalId: "",
    progress: "",
    achievements: "",
    challenges: "",
    nextWeekPlans: "",
  })
  const [newGoal, setNewGoal] = useState({
    title: "",
    description: "",
    type: "company" as const,
    level: "strategic" as const,
    owner: "",
    department: "",
    endDate: "",
  })

  const [goals, setGoals] = useState<Goal[]>([
    {
      id: "1",
      title: "–£–≤–µ–ª–∏—á–∏—Ç—å –≤—ã—Ä—É—á–∫—É –Ω–∞ 25%",
      description: "–î–æ—Å—Ç–∏—á—å –≤—ã—Ä—É—á–∫–∏ 50 –º–ª–Ω —Ä—É–±–ª–µ–π –∫ –∫–æ–Ω—Ü—É –≥–æ–¥–∞",
      type: "company",
      level: "strategic",
      owner: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.",
      department: "–ü—Ä–æ–¥–∞–∂–∏",
      progress: 68,
      status: "on-track",
      startDate: "2024-01-01",
      endDate: "2024-12-31",
      keyResults: [
        { id: "1", title: "–ü—Ä–∏–≤–ª–µ—á—å 100 –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", target: 100, current: 72, unit: "–∫–ª–∏–µ–Ω—Ç–æ–≤", progress: 72 },
        { id: "2", title: "–£–≤–µ–ª–∏—á–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫ –¥–æ 500–∫", target: 500000, current: 420000, unit: "‚ÇΩ", progress: 84 },
      ],
      comments: [
        {
          id: "1",
          author: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.",
          text: "–û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤",
          date: "2024-08-15",
          type: "feedback",
        },
      ],
    },
    {
      id: "2",
      title: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç",
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —Ä—ã–Ω–æ–∫ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
      type: "project",
      level: "tactical",
      owner: "–°–∏–¥–æ—Ä–æ–≤ –°.–°.",
      department: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      progress: 45,
      status: "at-risk",
      startDate: "2024-03-01",
      endDate: "2024-10-31",
      keyResults: [
        { id: "3", title: "–ó–∞–≤–µ—Ä—à–∏—Ç—å MVP", target: 100, current: 80, unit: "%", progress: 80 },
        { id: "4", title: "–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", target: 50, current: 15, unit: "—Ç–µ—Å—Ç–æ–≤", progress: 30 },
      ],
      comments: [],
    },
  ])

  const getStatusColor = (status: string) => {
    switch (status) {
      case "on-track":
        return "text-green-600 bg-green-50"
      case "at-risk":
        return "text-yellow-600 bg-yellow-50"
      case "behind":
        return "text-red-600 bg-red-50"
      default:
        return "text-gray-600 bg-gray-50"
    }
  }

  const getStatusIcon = (status: string) => {
    switch (status) {
      case "on-track":
        return <CheckCircle className="w-4 h-4" />
      case "at-risk":
        return <AlertTriangle className="w-4 h-4" />
      case "behind":
        return <XCircle className="w-4 h-4" />
      default:
        return <Target className="w-4 h-4" />
    }
  }

  const handleAddGoal = () => {
    if (!newGoal.title || !newGoal.description || !newGoal.owner || !newGoal.endDate) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")
      return
    }

    const newGoalObject: Goal = {
      id: Date.now().toString(),
      title: newGoal.title,
      description: newGoal.description,
      type: newGoal.type,
      level: newGoal.level,
      owner: newGoal.owner,
      department: newGoal.department || "–û–±—â–∏–π",
      progress: 0,
      status: "on-track",
      startDate: new Date().toISOString().split("T")[0],
      endDate: newGoal.endDate,
      keyResults: [],
      comments: [],
    }

    setGoals([...goals, newGoalObject])

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
    alert(`–¶–µ–ª—å "${newGoal.title}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`)

    setShowAddGoal(false)
    setNewGoal({
      title: "",
      description: "",
      type: "company",
      level: "strategic",
      owner: "",
      department: "",
      endDate: "",
    })
  }

  const handleGoalDetails = (goal: Goal) => {
    setSelectedGoal(goal)
    setShowGoalDetails(true)
  }

  const handleWeeklyReport = (goalId: string) => {
    setWeeklyReport({ ...weeklyReport, goalId })
    setShowWeeklyReport(true)
  }

  const submitWeeklyReport = () => {
    console.log("–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", weeklyReport)
    setShowWeeklyReport(false)
    setWeeklyReport({
      goalId: "",
      progress: "",
      achievements: "",
      challenges: "",
      nextWeekPlans: "",
    })
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-foreground">üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ —Ü–µ–ª–∏</h1>
          <p className="text-muted-foreground">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏ –∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏</p>
        </div>
        <Dialog open={showAddGoal} onOpenChange={setShowAddGoal}>
          <DialogTrigger asChild>
            <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
              <Plus className="w-4 h-4 mr-2" />
              –ù–æ–≤–∞—è —Ü–µ–ª—å
            </Button>
          </DialogTrigger>
          <DialogContent className="max-w-2xl">
            <DialogHeader>
              <DialogTitle>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ü–µ–ª–∏</DialogTitle>
            </DialogHeader>
            <div className="space-y-4">
              <div>
                <label className="text-sm font-medium text-foreground">–ù–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏ *</label>
                <Input
                  value={newGoal.title}
                  onChange={(e) => setNewGoal({ ...newGoal, title: e.target.value })}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏"
                  className="mt-1"
                />
              </div>
              <div>
                <label className="text-sm font-medium text-foreground">–û–ø–∏—Å–∞–Ω–∏–µ *</label>
                <Textarea
                  value={newGoal.description}
                  onChange={(e) => setNewGoal({ ...newGoal, description: e.target.value })}
                  placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–∏"
                  className="mt-1"
                  rows={3}
                />
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="text-sm font-medium text-foreground">–¢–∏–ø —Ü–µ–ª–∏</label>
                  <Select value={newGoal.type} onValueChange={(value: any) => setNewGoal({ ...newGoal, type: value })}>
                    <SelectTrigger className="mt-1">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="company">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è</SelectItem>
                      <SelectItem value="department">–û—Ç–¥–µ–ª</SelectItem>
                      <SelectItem value="individual">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è</SelectItem>
                      <SelectItem value="project">–ü—Ä–æ–µ–∫—Ç</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <label className="text-sm font-medium text-foreground">–£—Ä–æ–≤–µ–Ω—å</label>
                  <Select
                    value={newGoal.level}
                    onValueChange={(value: any) => setNewGoal({ ...newGoal, level: value })}
                  >
                    <SelectTrigger className="mt-1">
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="strategic">–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π</SelectItem>
                      <SelectItem value="tactical">–¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–π</SelectItem>
                      <SelectItem value="operational">–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="text-sm font-medium text-foreground">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π *</label>
                  <Input
                    value={newGoal.owner}
                    onChange={(e) => setNewGoal({ ...newGoal, owner: e.target.value })}
                    placeholder="–§–ò–û –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ"
                    className="mt-1"
                  />
                </div>
                <div>
                  <label className="text-sm font-medium text-foreground">–û—Ç–¥–µ–ª</label>
                  <Input
                    value={newGoal.department}
                    onChange={(e) => setNewGoal({ ...newGoal, department: e.target.value })}
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞"
                    className="mt-1"
                  />
                </div>
              </div>
              <div>
                <label className="text-sm font-medium text-foreground">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è *</label>
                <Input
                  type="date"
                  value={newGoal.endDate}
                  onChange={(e) => setNewGoal({ ...newGoal, endDate: e.target.value })}
                  className="mt-1"
                />
              </div>
              <div className="bg-blue-50 dark:bg-blue-900/20 border dark:border-blue-800 p-3 rounded-lg">
                <p className="text-sm text-blue-800 dark:text-blue-200">
                  <strong>–°–æ–≤–µ—Ç:</strong> –§–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Ü–µ–ª–∏ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É SMART: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –∏–∑–º–µ—Ä–∏–º—ã–µ, –¥–æ—Å—Ç–∏–∂–∏–º—ã–µ,
                  —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏.
                </p>
              </div>
              <div className="flex justify-end space-x-2 pt-4">
                <Button variant="outline" onClick={() => setShowAddGoal(false)}>
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button
                  onClick={handleAddGoal}
                  disabled={!newGoal.title || !newGoal.description || !newGoal.owner || !newGoal.endDate}
                >
                  –°–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å
                </Button>
              </div>
            </div>
          </DialogContent>
        </Dialog>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">–í—Å–µ–≥–æ —Ü–µ–ª–µ–π</p>
                <p className="text-2xl font-bold">{goals.length}</p>
              </div>
              <Target className="w-8 h-8 text-blue-600" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</p>
                <p className="text-2xl font-bold text-green-600">{goals.filter((g) => g.progress === 100).length}</p>
              </div>
              <CheckCircle className="w-8 h-8 text-green-600" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</p>
                <p className="text-2xl font-bold text-yellow-600">
                  {goals.filter((g) => g.progress > 0 && g.progress < 100).length}
                </p>
              </div>
              <Clock className="w-8 h-8 text-yellow-600" />
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-muted-foreground">–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
                <p className="text-2xl font-bold">
                  {Math.round(goals.reduce((acc, goal) => acc + goal.progress, 0) / goals.length)}%
                </p>
              </div>
              <TrendingUp className="w-8 h-8 text-purple-600" />
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Main Content */}
      <Tabs value={activeTab} onValueChange={setActiveTab}>
        <TabsList className="grid w-full grid-cols-6">
          <TabsTrigger value="overview">–û–±–∑–æ—Ä</TabsTrigger>
          <TabsTrigger value="okr">OKR/KPI</TabsTrigger>
          <TabsTrigger value="projects">–ü—Ä–æ–µ–∫—Ç—ã</TabsTrigger>
          <TabsTrigger value="individual">–õ–∏—á–Ω—ã–µ</TabsTrigger>
          <TabsTrigger value="analytics">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</TabsTrigger>
          <TabsTrigger value="archive">–ê—Ä—Ö–∏–≤</TabsTrigger>
        </TabsList>

        <TabsContent value="overview" className="space-y-6">
          {goals.length === 0 ? (
            <Card>
              <CardContent className="p-8 text-center">
                <Target className="w-12 h-12 text-muted-foreground mx-auto mb-4" />
                <h3 className="text-lg font-semibold mb-2">–ü–æ–∫–∞ –Ω–µ—Ç —Ü–µ–ª–µ–π</h3>
                <p className="text-muted-foreground mb-4">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ü–µ–ª—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
                <Button onClick={() => setShowAddGoal(true)}>
                  <Plus className="w-4 h-4 mr-2" />
                  –°–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å
                </Button>
              </CardContent>
            </Card>
          ) : (
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              {goals.map((goal) => (
                <Card key={goal.id} className="hover:shadow-md transition-shadow">
                  <CardHeader className="pb-3">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <CardTitle className="text-lg">{goal.title}</CardTitle>
                        <p className="text-sm text-muted-foreground mt-1">{goal.description}</p>
                      </div>
                      <Badge className={`ml-2 ${getStatusColor(goal.status)}`}>
                        {getStatusIcon(goal.status)}
                        <span className="ml-1">
                          {goal.status === "on-track" ? "–í –ø–ª–∞–Ω–µ" : goal.status === "at-risk" ? "–†–∏—Å–∫" : "–û—Ç—Å—Ç–∞–µ—Ç"}
                        </span>
                      </Badge>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div>
                        <div className="flex justify-between text-sm mb-2">
                          <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                          <span>{goal.progress}%</span>
                        </div>
                        <Progress value={goal.progress} className="h-2" />
                      </div>

                      <div className="flex items-center justify-between text-sm text-muted-foreground">
                        <div className="flex items-center">
                          <Users className="w-4 h-4 mr-1" />
                          {goal.owner}
                        </div>
                        <div className="flex items-center">
                          <Calendar className="w-4 h-4 mr-1" />
                          {new Date(goal.endDate).toLocaleDateString()}
                        </div>
                      </div>

                      <div className="flex space-x-2">
                        <Button variant="outline" size="sm" onClick={() => handleGoalDetails(goal)} className="flex-1">
                          <Eye className="w-4 h-4 mr-1" />
                          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                        </Button>
                        <Button variant="outline" size="sm" onClick={() => handleWeeklyReport(goal.id)}>
                          <MessageSquare className="w-4 h-4 mr-1" />
                          –û—Ç—á–µ—Ç
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          )}
        </TabsContent>

        <TabsContent value="okr" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle>OKR –°—Ç—Ä—É–∫—Ç—É—Ä–∞</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                <div className="border-l-4 border-blue-500 pl-4">
                  <h3 className="font-semibold text-lg text-foreground">–ö–æ–º–ø–∞–Ω–∏—è</h3>
                  <p className="text-sm text-muted-foreground">–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ü–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</p>
                  <div className="mt-2 space-y-2">
                    <div className="bg-blue-50 dark:bg-blue-900/20 border dark:border-blue-800 p-3 rounded-lg">
                      <p className="font-medium text-foreground">–£–≤–µ–ª–∏—á–∏—Ç—å –≤—ã—Ä—É—á–∫—É –Ω–∞ 25%</p>
                      <Progress value={68} className="mt-2 h-2" />
                    </div>
                  </div>
                </div>

                <div className="border-l-4 border-green-500 pl-4">
                  <h3 className="font-semibold text-lg text-foreground">–û—Ç–¥–µ–ª—ã</h3>
                  <p className="text-sm text-muted-foreground">–¶–µ–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π</p>
                  <div className="mt-2 grid grid-cols-1 md:grid-cols-2 gap-3">
                    <div className="bg-green-50 dark:bg-green-900/20 border dark:border-green-800 p-3 rounded-lg">
                      <p className="font-medium text-foreground">–ü—Ä–æ–¥–∞–∂–∏: +30% –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
                      <Progress value={72} className="mt-2 h-2" />
                    </div>
                    <div className="bg-green-50 dark:bg-green-900/20 border dark:border-green-800 p-3 rounded-lg">
                      <p className="font-medium text-foreground">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞: 2 –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞</p>
                      <Progress value={45} className="mt-2 h-2" />
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="analytics" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>–ü–ª–∞–Ω vs –§–∞–∫—Ç</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="flex justify-between items-center">
                    <span>Q1 2024</span>
                    <div className="flex space-x-2">
                      <Badge variant="outline">–ü–ª–∞–Ω: 85%</Badge>
                      <Badge className="bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200">
                        –§–∞–∫—Ç: 92%
                      </Badge>
                    </div>
                  </div>
                  <div className="flex justify-between items-center">
                    <span>Q2 2024</span>
                    <div className="flex space-x-2">
                      <Badge variant="outline">–ü–ª–∞–Ω: 75%</Badge>
                      <Badge className="bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200">
                        –§–∞–∫—Ç: 68%
                      </Badge>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex items-start space-x-3 p-3 bg-blue-50 dark:bg-blue-900/20 border dark:border-blue-800 rounded-lg">
                    <Lightbulb className="w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5" />
                    <div>
                      <p className="text-sm font-medium text-foreground">–¶–µ–ª—å "–£–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏" —Å–ª–∏—à–∫–æ–º –æ–±—â–∞—è</p>
                      <p className="text-xs text-muted-foreground">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ SMART</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3 p-3 bg-yellow-50 dark:bg-yellow-900/20 border dark:border-yellow-800 rounded-lg">
                    <Zap className="w-5 h-5 text-yellow-600 dark:text-yellow-400 mt-0.5" />
                    <div>
                      <p className="text-sm font-medium text-foreground">–†–∏—Å–∫ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–µ–ª–∏ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
                      <p className="text-xs text-muted-foreground">
                        –¢–µ–∫—É—â–∏–π —Ç–µ–º–ø –Ω–µ –ø–æ–∑–≤–æ–ª–∏—Ç –¥–æ—Å—Ç–∏—á—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Å—Ä–æ–∫
                      </p>
                    </div>
                  </div>
                  <div className="flex space-x-2 pt-2">
                    <Button size="sm" variant="outline" className="text-xs bg-transparent">
                      –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
                    </Button>
                    <Button size="sm" variant="ghost" className="text-xs">
                      –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="projects">
          <Card>
            <CardHeader>
              <CardTitle>–¶–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground">–¶–µ–ª–∏, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫ –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–∞–º –∫–æ–º–ø–∞–Ω–∏–∏</p>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="individual">
          <Card>
            <CardHeader>
              <CardTitle>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground">–õ–∏—á–Ω—ã–µ —Ü–µ–ª–∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="archive">
          <Card>
            <CardHeader>
              <CardTitle>–ê—Ä—Ö–∏–≤ —Ü–µ–ª–µ–π</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground">–ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π –∏ –∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</p>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      {/* Goal Details Modal */}
      <Dialog open={showGoalDetails} onOpenChange={setShowGoalDetails}>
        <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle>{selectedGoal?.title}</DialogTitle>
          </DialogHeader>
          {selectedGoal && (
            <div className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-semibold mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                  <p className="text-sm text-muted-foreground">{selectedGoal.description}</p>
                </div>
                <div>
                  <h3 className="font-semibold mb-2">–î–µ—Ç–∞–ª–∏</h3>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:</span>
                      <span>{selectedGoal.owner}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>–û—Ç–¥–µ–ª:</span>
                      <span>{selectedGoal.department}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>–°—Ä–æ–∫:</span>
                      <span>{new Date(selectedGoal.endDate).toLocaleDateString()}</span>
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 className="font-semibold mb-3">–ö–ª—é—á–µ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</h3>
                <div className="space-y-3">
                  {selectedGoal.keyResults.map((kr) => (
                    <div key={kr.id} className="border rounded-lg p-4">
                      <div className="flex justify-between items-start mb-2">
                        <h4 className="font-medium">{kr.title}</h4>
                        <Badge variant="outline">
                          {kr.current} / {kr.target} {kr.unit}
                        </Badge>
                      </div>
                      <Progress value={kr.progress} className="h-2" />
                    </div>
                  ))}
                </div>
              </div>

              <div>
                <h3 className="font-semibold mb-3">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h3>
                <div className="space-y-3">
                  {selectedGoal.comments.length > 0 ? (
                    selectedGoal.comments.map((comment) => (
                      <div key={comment.id} className="border rounded-lg p-3">
                        <div className="flex justify-between items-start mb-2">
                          <span className="font-medium text-sm">{comment.author}</span>
                          <span className="text-xs text-muted-foreground">{comment.date}</span>
                        </div>
                        <p className="text-sm">{comment.text}</p>
                      </div>
                    ))
                  ) : (
                    <p className="text-sm text-muted-foreground">–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤</p>
                  )}
                </div>
              </div>
            </div>
          )}
        </DialogContent>
      </Dialog>

      {/* Weekly Report Modal */}
      <Dialog open={showWeeklyReport} onOpenChange={setShowWeeklyReport}>
        <DialogContent className="max-w-2xl">
          <DialogHeader>
            <DialogTitle>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ü–µ–ª–∏</DialogTitle>
          </DialogHeader>
          <div className="space-y-4">
            <div>
              <label className="text-sm font-medium">–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ –Ω–µ–¥–µ–ª—é (%)</label>
              <Input
                type="number"
                value={weeklyReport.progress}
                onChange={(e) => setWeeklyReport({ ...weeklyReport, progress: e.target.value })}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö"
              />
            </div>
            <div>
              <label className="text-sm font-medium">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</label>
              <Textarea
                value={weeklyReport.achievements}
                onChange={(e) => setWeeklyReport({ ...weeklyReport, achievements: e.target.value })}
                placeholder="–ß—Ç–æ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∏—á—å –∑–∞ –Ω–µ–¥–µ–ª—é?"
                rows={3}
              />
            </div>
            <div>
              <label className="text-sm font-medium">–ü—Ä–æ–±–ª–µ–º—ã –∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è</label>
              <Textarea
                value={weeklyReport.challenges}
                onChange={(e) => setWeeklyReport({ ...weeklyReport, challenges: e.target.value })}
                placeholder="–° –∫–∞–∫–∏–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å?"
                rows={3}
              />
            </div>
            <div>
              <label className="text-sm font-medium">–ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é</label>
              <Textarea
                value={weeklyReport.nextWeekPlans}
                onChange={(e) => setWeeklyReport({ ...weeklyReport, nextWeekPlans: e.target.value })}
                placeholder="–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ?"
                rows={3}
              />
            </div>
            <div className="flex justify-end space-x-2">
              <Button variant="outline" onClick={() => setShowWeeklyReport(false)}>
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Button onClick={submitWeeklyReport}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç</Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  )
}

export default StrategyDashboard
export { StrategyDashboard }
